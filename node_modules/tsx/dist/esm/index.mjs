var C=Object.defineProperty;var i=(t,a)=>C(t,"name",{value:a,configurable:!0});import{isMainThread as v}from"node:worker_threads";import{i as y,a as Q,e as q,m as G}from"../node-features-_8ZFwP_x.mjs";import{r as H}from"../register-BOQ2w7d8.mjs";import"../get-pipe-path-BHW2eJdv.mjs";import"node:module";import j from"node:path";import{fileURLToPath as N,pathToFileURL as J}from"node:url";import"get-tsconfig";import O from"node:fs";import"esbuild";import"node:crypto";import{i as X,a as B,t as K,b as z,r as V}from"../index-BQiEz0On.mjs";import{p as F}from"../client-BQVF1NaW.mjs";import{l as S,t as P,a as Y,b as M,f as $,c as I,d as L,e as Z,g as x,h as tt,m as at,j as D}from"../register-D46En2W-.mjs";import"../require-G3adVXXd.mjs";import{readFile as st}from"node:fs/promises";import"module";import"../temporary-directory-CwHp0_NW.mjs";import"node:os";import"node:net";const f={active:!0},et=i(async t=>{if(!t)throw new Error(`tsx must be loaded with --import instead of --loader
The --loader flag was deprecated in Node v20.6.0 and v18.19.0`);f.namespace=t.namespace,t.tsconfig!==!1&&S(t.tsconfig??process.env.TSX_TSCONFIG_PATH),t.port&&(f.port=t.port,t.port.on("message",a=>{a==="deactivate"&&(f.active=!1,t.port.postMessage({type:"deactivated"}))}))},"initialize"),rt=i(()=>(S(process.env.TSX_TSCONFIG_PATH),"process.setSourceMapsEnabled(true);"),"globalPreload"),u=new Map,ot=i(async t=>{if(u.has(t))return u.get(t);if(!await O.promises.access(t).then(()=>!0,()=>!1)){u.set(t,void 0);return}const r=await O.promises.readFile(t,"utf8");try{const n=JSON.parse(r);return u.set(t,n),n}catch{throw new Error(`Error parsing: ${t}`)}},"readPackageJson"),nt=i(async t=>{let a=new URL("package.json",t);for(;!a.pathname.endsWith("/node_modules/package.json");){const r=N(a),n=await ot(r);if(n)return n;const e=a;if(a=new URL("../package.json",a),a.pathname===e.pathname)break}},"findPackageJson"),ct=i(async t=>(await nt(t))?.type??"commonjs","getPackageType"),it=i(t=>{[t]=t.split("?");const a=j.extname(t);if(a===".json")return"json";if(a===".mjs"||a===".mts")return"module";if(a===".cjs"||a===".cts")return"commonjs"},"getFormatFromExtension"),mt=i(t=>{const a=it(t);if(a)return a;if(P.test(t))return ct(t)},"getFormatFromFileUrl"),g="tsx-namespace=",h=i(t=>{const a=t.indexOf(g);if(a===-1)return;const r=t[a-1];if(r!=="?"&&r!=="&")return;const n=a+g.length,e=t.indexOf("&",n);return e===-1?t.slice(n):t.slice(n,e)},"getNamespace"),k=y(Q)?"importAttributes":"importAssertions",pt=i(async(t,a,r)=>{if(!f.active)return r(t,a);const n=h(t);if(f.namespace&&f.namespace!==n)return r(t,a);if(f.port){const o=new URL(t);o.searchParams.delete("tsx-namespace"),f.port.postMessage({type:"load",url:o.toString()})}F.send&&F.send({type:"dependency",path:t}),Y.test(t)&&(a[k]||(a[k]={}),a[k].type="json");const e=await r(t,a),c=t.startsWith("file://")?N(t):t;if(e.format==="commonjs"&&y(q)&&e.responseURL?.startsWith("file:")&&!c.endsWith(".cjs")){const o=await st(new URL(t),"utf8");if(!c.endsWith(".js")||X(o)){const m=B(o,c,{tsconfigRaw:$?.(c)}),p=n?`${c}?namespace=${encodeURIComponent(n)}`:c;return e.responseURL=`data:text/javascript,${encodeURIComponent(m.code)}?filePath=${encodeURIComponent(p)}`,e}}if(!e.source)return e;const s=e.source.toString();if(e.format==="json"||P.test(t)){const o=await K(s,c,{tsconfigRaw:$?.(c)});return{format:"module",source:M(o)}}if(e.format==="module"){const o=z(c,s);o&&(e.source=M(o))}return e},"load"),E=i(async t=>(!t.format&&t.url.startsWith(tt)&&(t.format=await mt(t.url)),t),"resolveMissingFormat"),ft=[".js",".json",".ts",".tsx",".jsx"],_=i(async(t,a,r)=>{const[n,e]=t.split("?");let c;for(const s of ft)try{return await E(await r(n+s+(e?`?${e}`:""),a))}catch(o){if(c===void 0&&o instanceof Error){const{message:m}=o;o.message=o.message.replace(`${s}'`,"'"),o.stack=o.stack.replace(m,o.message),c=o}}throw c},"tryExtensions"),b=i(async(t,a,r)=>{const n=L.test(t),e=n?"index":"/index",[c,s]=t.split("?");try{return await _(c+e+(s?`?${s}`:""),a,r)}catch(o){if(!n)try{return await _(t,a,r)}catch{}const m=o,{message:p}=m;throw m.message=m.message.replace(`${e.replace("/",j.sep)}'`,"'"),m.stack=m.stack.replace(p,m.message),m}},"tryDirectory"),l=i(async(t,a,r)=>{const n=at(t);if(n)for(const e of n)try{return await E(await r(e,a))}catch(c){const{code:s}=c;if(s!=="ERR_MODULE_NOT_FOUND"&&s!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw c}},"tryTsPaths"),A=i(async(t,a,r,n)=>{if(!f.active)return r(t,a);const e=a.parentURL&&h(a.parentURL),c=I(t);if(c){let s=h(t);if(e&&!s&&(s=e,t+=`${t.includes("?")?"&":"?"}${g}${e}`),f.namespace&&f.namespace!==s)return r(t,a);if(L.test(t))return await b(t,a,r)}else if(D&&!a.parentURL?.includes("/node_modules/")){const s=D(t);for(const o of s)try{return await A(J(o).toString(),a,r)}catch{}}if((t.startsWith("#")||!Z.test(t))&&(P.test(a.parentURL)||x)){const s=await l(t,a,r);if(s)return s}try{const s=await E(await r(t,a));if(I(s.url)){const o=h(s.url);e&&!o&&(s.url+=`${s.url.includes("?")?"&":"?"}${g}${e}`)}return s}catch(s){if(s instanceof Error&&!n){const o=s,{code:m}=o;if(m==="ERR_UNSUPPORTED_DIR_IMPORT")try{return await b(t,a,r)}catch(p){if(p.code!=="ERR_PACKAGE_IMPORT_NOT_DEFINED")throw p}if(m==="ERR_MODULE_NOT_FOUND"){if(o.url){const p=await l(o.url,a,r);if(p)return p}else{const p=s.message.match(/^Cannot find module '([^']+)'/);if(p){const[,w]=p,d=await l(w,a,r);if(d)return d}const R=s.message.match(/^Cannot find package '([^']+)'/);if(R){const[,w]=R,d=J(w);d.pathname.endsWith("/package.json")||(d.pathname+="/package.json");const T=await V(d);if(T?.main){const W=new URL(T.main,d),U=await l(W.toString(),a,r);if(U)return U}}}if(c)try{return await _(t,a,r)}catch{}}}throw s}},"resolve");y(G)&&v&&H();export{rt as globalPreload,et as initialize,pt as load,A as resolve};
